{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qBC8BCQ,EAlCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAmBzC,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SApBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCIhBG,EAVK,SAAEC,GAElB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAKL,EAAIK,Y,uBCPRC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbL,EAFa,0FAE6EM,UAAUF,GAFvF,sBAGAG,MAAMP,GAHN,cAGbQ,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAf,GAAQ,IAAD,EAC1B,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QAVvB,kBAcZW,GAdY,4CAAH,sDCuBLK,EAnBC,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECAR,SAAEA,GAAe,IAAD,EACdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WAEPjB,EAASC,GAAW7B,MAAM,SAAA8C,GACtBF,EAAS,CACLT,KAAMW,EACNJ,SAAS,SAIlB,CAAEb,IAEEc,EDfmBI,CAAclB,GAAhCM,EAFwB,EAExBA,KAFwB,EAElBO,QAGd,OACI,qCACI,6BAAMb,IACL,qBAAKN,UAAU,YAAf,SAEOY,EAAKE,KAAK,SAAAf,GAAG,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIgB,aEa/BU,EAvBM,WAAO,IAAD,EAEaxC,mBAAS,IAFtB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCAEI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQS,EAAWqB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,YCXvCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.0dc4a916.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handelSubmit}>\r\n            <input \r\n            type='text'\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ( img ) => {\r\n    \r\n    return (\r\n        <div className=\"card\">\r\n            <img src={img.url} alt={img.title}></img>\r\n            <p>{ img.title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=cK3hgd3g2k7sCcRCFNfmUTgVkl5kC7PA&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    const { data, loading } = useFetchGifs( category )\r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            {<div className=\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    ))\r\n                }  \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category ).then( imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n           \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }></AddCategory>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={ category } category={ category } />\r\n                     ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}